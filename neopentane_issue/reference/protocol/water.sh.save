ls
#!/bin/bash
#SBATCH -o somd-array-gpu-%A.%a.out
#SBATCH -p GTX
#SBATCH -n 1
#SBATCH --gres=gpu:1
#SBATCH --time 48:00:00
#SBATCH --array=0-16


module load cuda/7.0

export OPENMM_CUDA_COMPILER=/usr/local/cuda-7.0/bin/nvcc

echo "CUDA DEVICES:" $CUDA_VISIBLE_DEVICES

lamvals=( 0.0000 0.0625 0.1250 0.1875 0.2500 0.3125 0.3750 0.4375 0.5000 0.5625 0.6250 0.6875 0.7500 0.8125 0.8750 0.9375 1.0000)

lam=${lamvals[SLURM_ARRAY_TASK_ID]}

echo "lambda is: " $lam

mkdir lambda-$lam
cd lambda-$lam
cp ../input/MORPH.pert . 
cp ../input/sim.cfg . 
cp ../input/SYSTEM.top .
cp ../input/SYSTEM.crd .

export OPENMM_PLUGIN_DIR=/home/julien/sire.app/lib/plugins/

srun /home/julien/sire.app/bin/somd-freenrg -C sim.cfg -l $lam -p CUDA
cd ..

wait

if [ "$SLURM_ARRAY_TASK_ID" -eq "0" ]
then
    sleep 10
    #Finish the simulation with Coulomb calculation:
    sbatch coulcor.sh
    #Submit LJCor
    sbatch ljcor.sh
    #TI esxtraction with regression scheme
    ~/sire.app/bin/analyse_freenrg -g lambda-*/gradients.s3  >  freenrg-TI.dat
    #create analysisgro files to be analysed
    ~/sire.app/bin/python analysis_alchemical.py
    wait
    cd analysis_gro
    #extract free energy change
    ~/sire.app/bin/python alchemical_analysis.py -a 'Sire' -p 'lambda*' -q '' -d '.' -r '4' -m 'TI-CUBIC' -g
    wait
    cd ../
    #write results to AVERAGE.dat
    ~/sire.app/bin/python extract_results.py
    wait
    #create pdf 
    ~/sire.app/bin/python grad_profile.py
    wait

fi


